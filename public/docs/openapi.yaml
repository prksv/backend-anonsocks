openapi: 3.0.3
info:
  title: Anonsocks
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://127.0.0.1:8000'
paths:
  /api/v1/proxy/categories:
    get:
      summary: 'Список категорий'
      operationId: ''
      description: 'Получить категории проксей'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  message: 'Categories list'
                  data:
                    -
                      name: ipv6_64
                      available: 1
                      rental_terms:
                        -
                          days: 1
                          price: 1
                    -
                      name: ipv4_free
                      available: 1
                      rental_terms: []
                    -
                      name: ipv4_premium
                      available: 1
                      rental_terms: []
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Categories list'
                  data:
                    type: array
                    example:
                      -
                        name: ipv6_64
                        available: 1
                        rental_terms:
                          -
                            days: 1
                            price: 1
                      -
                        name: ipv4_free
                        available: 1
                        rental_terms: []
                      -
                        name: ipv4_premium
                        available: 1
                        rental_terms: []
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          example: ipv6_64
                        available:
                          type: integer
                          example: 1
                        rental_terms:
                          type: array
                          example:
                            -
                              days: 1
                              price: 1
                          items:
                            type: object
                            properties:
                              days:
                                type: integer
                                example: 1
                              price:
                                type: integer
                                example: 1
      tags:
        - Category
      security: []
  /api/v1/deposit:
    get:
      summary: 'Список депозитов'
      operationId: ''
      description: 'Получить все депозиты юзера'
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: Unauthenticated.
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Deposits
  /api/v1/deposit/create:
    post:
      summary: 'Создать депозит'
      operationId: ''
      description: 'Создает заявку на депозит и возращает URL coinbase оплаты'
      parameters: []
      responses: {  }
      tags:
        - Deposits
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 67
              required:
                - amount
  /api/coinbase/webhook:
    post:
      summary: ''
      operationId: postApiCoinbaseWebhook
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/v1/orders:
    get:
      summary: 'Список заказов'
      operationId: ''
      description: 'Получить все заказы юзера'
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: Unauthenticated.
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Orders
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                full:
                  type: boolean
                  description: ''
                  example: false
  '/api/v1/proxy/{category}/buy':
    post:
      summary: 'Купить прокси'
      operationId: ''
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Orders
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                country_code:
                  type: string
                  description: 'Country code'
                  example: UA
                count:
                  type: number
                  description: 'Must be at least 1.'
                  example: 45
                rental_days:
                  type: number
                  description: 'Must be at least 1.'
                  example: 65
              required:
                - count
                - rental_days
    parameters:
      -
        in: path
        name: category
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: ipv6_64
  '/api/v1/proxy/list/{user_id}.txt':
    get:
      summary: ''
      operationId: getApiV1ProxyListUser_idTxt
      description: ''
      parameters: []
      responses:
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: Forbidden
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Forbidden
      tags:
        - Proxy
      security: []
    parameters:
      -
        in: path
        name: user_id
        description: 'The ID of the user.'
        example: nam
        required: true
        schema:
          type: string
  /api/v1/proxy:
    get:
      summary: 'Получить купленные прокси'
      operationId: ''
      description: 'Получить все купленные прокси юзера'
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: Unauthenticated.
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Proxy
  /api/v1/proxy/export:
    post:
      summary: 'Экспортировать прокси'
      operationId: ''
      description: 'Экспортировать все купленные и активные прокси юзера. Вернет URL на скачиванние'
      parameters: []
      responses: {  }
      tags:
        - Proxy
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                proxy_ids:
                  type: object
                  description: ''
                  example: null
                  properties: []
  /api/v1/register:
    post:
      summary: Зарегистрироваться
      operationId: ''
      description: ''
      parameters: []
      responses: {  }
      tags:
        - User
      security: []
  /api/v1/login:
    post:
      summary: Залогиниться
      operationId: ''
      description: ''
      parameters: []
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                authorization_token:
                  type: string
                  description: ''
                  example: nostrum
              required:
                - authorization_token
      security: []
  /api/v1/user:
    get:
      summary: 'Получить юзера'
      operationId: ''
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: Unauthenticated.
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - User
      security: []
tags:
  -
    name: Category
    description: ''
  -
    name: Deposits
    description: ''
  -
    name: Endpoints
    description: ''
  -
    name: Orders
    description: ''
  -
    name: Proxy
    description: ''
  -
    name: User
    description: ''
